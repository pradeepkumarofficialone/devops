pipeline {
    
    // Add any agent
    agent any
    
    // Add tools
    tools {
        nodejs 'nodejs' 
    }
    
    // Add environment variables
    environment {
        DOCKER_IMAGE = "${env.DOCKER_IMAGE}"
        CD_SERVER_IP = "${env.CD_SERVER_IP}"
    }

    // Checkout the code from the repository
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/pradeepkumarofficialone/devops.git'
            }
        }
        // Build the code & Docker image with the React app
        stage('Build') {
            steps {
                dir('AWS-CICD-for-ReactJs-ToDo-App/ReactTodoApp') { 
                    sh 'echo Building the project...'
                    sh 'npm install'
                    sh 'docker build -t ${DOCKER_IMAGE} .'
                }
            }
        }
                
        // Run tests on the React app
        stage('Test') {
            steps {
                dir('AWS-CICD-for-ReactJs-ToDo-App/ReactTodoApp/Test') { 
                    sh 'echo Running tests...'
                    sh 'npm test'
                }
            }
        }
                
        // Push the Docker image to Docker Hub
        stage('Push to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh 'docker login -u $DOCKER_USER -p $DOCKER_PASS'
                        sh 'docker tag ${DOCKER_IMAGE} ${DOCKER_IMAGE}:latest'
                        sh 'docker push ${DOCKER_IMAGE}:latest'
                    }
                }
            }
        }

        // Deploy the Docker image to the CD server
        stage('Deploy to CD Server') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'cd-server-ssh-key', keyFileVariable: 'SSH_KEY')]) {
                        sh """
                            echo Deploying application to CD server...
                            ssh -o StrictHostKeyChecking=no -i $SSH_KEY user@${CD_SERVER_IP} << 'EOF'
                                docker pull ${DOCKER_IMAGE}:latest
                                docker run -d -p 3000:3000 --name react-todo-app ${DOCKER_IMAGE}:latest
                            EOF
                        """
                    }
                }
            }
        }
    
    }

  
}

